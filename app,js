/*
 * Starter Project for WhatsApp Echo Bot Tutorial
 *
 * Remix this as the starting point for following the WhatsApp Echo Bot tutorial
 *
 */

"use strict";

// Access token for your app
// (copy token from DevX getting started page
// and save it as environment variable into the .env file)
const token = process.env.WHATSAPP_TOKEN;

// Imports dependencies and set up http server
const request = require("request"),
  express = require("express"),
  body_parser = require("body-parser"),
  axios = require("axios").default,
  app = express().use(body_parser.json()); // creates express http server
const fs = require('fs');

const Tesseract = require('tesseract.js');

async function extractTextFromImageURL(imageURL, bearerToken) {
  try {
    const response = await axios({
      url: imageURL,
      method: 'GET',
      responseType: 'arraybuffer',
      headers: {
        'Authorization': `Bearer ${bearerToken}`,
        'Content-Type': 'application/octet-stream'
      }
    });

    const buffer = Buffer.from(response.data, 'binary');

    const { data: { text } } = await Tesseract.recognize(buffer);

    return text;
  } catch (error) {
    console.error(error);
  }
}


// Sets server port and logs message on success
app.listen(process.env.PORT || 1337, () => console.log("webhook is listening"));

// Initialize an empty object to store the data
const conversationData = {};


// Function to update the state of a conversation
function updateConversationState(waId, state) {
  conversationData[waId] = state;
}

// Function to retrieve the state of a conversation
function getConversationState(waId) {
  return conversationData[waId];
}

const STATES = {
  1: 'init',
  2: 'options_sent',
  3: 'confirm choice',
  4: 'sent_upi',
  5: 'confirm_payment',
  6: 'group_link',
};



// Usage example
let currentState = STATES.START;
if (currentState === STATES.START) {
  console.log('Starting state!');
}

function sendResponse(res, req, msg, resp_message) {
  let phone_number_id =
  req.body.entry[0].changes[0].value.metadata.phone_number_id;
  let from = req.body.entry[0].changes[0].value.messages[0].from;
  axios({
    method: "POST", // Required, HTTP method, a string, e.g. POST, GET
    url:
      "https://graph.facebook.com/v12.0/" +
      phone_number_id +
      "/messages?access_token=" +
      token,
    data: {
      messaging_product: "whatsapp",
      to: from,
      text: { body: resp_message },
    },
    headers: { "Content-Type": "application/json" },
  });
}

// Accepts POST requests at /webhook endpoint
app.post("/webhook", (req, res) => {
  // Parse the request body from the POST
  let body = req.body;

  // Check the Incoming webhook message
  console.log(JSON.stringify(req.body, null, 2));
  //console.log(JSON.stringify(req, null, 2));

  // info on WhatsApp text message payload: https://developers.facebook.com/docs/whatsapp/cloud-api/webhooks/payload-examples#text-messages
  if (req.body.object) {
    if (
      req.body.entry &&
      req.body.entry[0].changes &&
      req.body.entry[0].changes[0] &&
      req.body.entry[0].changes[0].value.messages &&
      req.body.entry[0].changes[0].value.messages[0]
    ) {
      let phone_number_id =
        req.body.entry[0].changes[0].value.metadata.phone_number_id;
      let from = req.body.entry[0].changes[0].value.messages[0].from; // extract the phone number from the webhook payload
      
      let resp_message = ""
      
      let conversation_state = getConversationState(from)
      if (conversation_state) {
        console.log('Key exists!' + conversation_state);
        switch (conversation_state) {
          case "1":
            let msg_body = req.body.entry[0].changes[0].value.messages[0].text.body; // extract the message text from the webhook payload
            switch (msg_body == "1") {
                
            }
            resp_message = "You choose: ${msg_body} \nTo confirm send yes\n";
            updateConversationState(from, "2");
            break;
          case "2": 
            resp_message = "Please send INR 30 to smita.peth70@oksbi UPI and send the screenshot here.";
            updateConversationState(from, "4");
            break;
          case "3":
            
            let type = req.body.entry[0].changes[0].value.messages[0].type;
            console.log('Type is:' + type);
            if (type == "image") {

            let config = {
              method: 'get',
              maxBodyLength: Infinity,
              url: 'https://graph.facebook.com/v16.0/' + req.body.entry[0].changes[0].value.messages[0].image.id,
              headers: { 
                'Authorization': 'Bearer ' + token 
              }
            };

            axios.request(config)
            .then((response) => {
                  console.log(JSON.stringify(response.data.url));
                  let imageURL = response.data.url;
                  let bearerToken = token;
                  extractTextFromImageURL('https://tesseract.projectnaptha.com/img/eng_bw.png', bearerToken).then(text => {
                    console.log(text);
                  });

            })
            .catch((error) => {
              console.log(error);
            });



              resp_message = "Thanks for joining 8th standard QAD program. Please use the following link to joining the whatsapp group.\nLink: <insert_group_link_here>";
              updateConversationState(from, "4");
            } else {
              resp_message = "Please send the confirmation image\n";
            }
            break;
          case "4":
            resp_message = "Thanks\n- Subodh Pethe"
            delete conversationData[from];
            break;
        }
        
      } else {
        console.log('Wecome new user');
        resp_message = "*Welcome to Question A Day*.\nPlease select the group you wish to join\n\n1) 8th Maths\n2) 9th Maths\n3) 10th Maths\n4) 8th Olympiad\n\nThanks,\nSubodh Pethe";
        updateConversationState(from, "3");
      }  
      //sendResponse(res, req, resp_message, resp_message);
      sendResponse(res, req, resp_message, resp_message);
    }
    res.sendStatus(200);
  } else {
    // Return a '404 Not Found' if event is not from a WhatsApp API
    res.sendStatus(404);
  }
});

// Accepts GET requests at the /webhook endpoint. You need this URL to setup webhook initially.
// info on verification request payload: https://developers.facebook.com/docs/graph-api/webhooks/getting-started#verification-requests 
app.get("/webhook", (req, res) => {
  /**
   * UPDATE YOUR VERIFY TOKEN
   *This will be the Verify Token value when you set up webhook
  **/
  const verify_token = process.env.VERIFY_TOKEN;

  // Parse params from the webhook verification request
  let mode = req.query["hub.mode"];
  let token = req.query["hub.verify_token"];
  let challenge = req.query["hub.challenge"];

  // Check if a token and mode were sent
  if (mode && token) {
    // Check the mode and token sent are correct
    if (mode === "subscribe" && token === verify_token) {
      // Respond with 200 OK and challenge token from the request
      console.log("WEBHOOK_VERIFIED");
      res.status(200).send(challenge);
    } else {
      // Responds with '403 Forbidden' if verify tokens do not match
      res.sendStatus(403);
    }
  }
});
